{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 6, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 68, "column": 0}, "map": {"version":3,"sources":["file:///app/code/src/app/api/projects/%5Bid%5D/route.ts"],"sourcesContent":["import { type NextRequest, NextResponse } from 'next/server';\nimport { PrismaClient } from '@prisma/client';\n\nconst prisma = new PrismaClient();\n\n// GET - جلب مشروع واحد\nexport async function GET(\n  request: NextRequest,\n  { params }: { params: Promise<{ id: string }> }\n) {\n  try {\n    const resolvedParams = await params;\n    const projectId = resolvedParams.id;\n\n    const project = await prisma.projects.findUnique({\n      where: { id: projectId },\n      include: {\n        media_items: {\n          orderBy: { order: 'asc' }\n        },\n        project_tags: true,\n        project_materials: true,\n        _count: {\n          select: {\n            comments: true,\n            project_likes: true\n          }\n        }\n      }\n    });\n\n    if (!project) {\n      return NextResponse.json(\n        { error: 'المشروع غير موجود' },\n        { status: 404 }\n      );\n    }\n\n    // زيادة عدد المشاهدات\n    await prisma.projects.update({\n      where: { id: projectId },\n      data: { views: { increment: 1 } }\n    });\n\n    console.log('📖 تم جلب المشروع:', project.title);\n\n    return NextResponse.json({\n      ...project,\n      mediaItems: (project as any).media_items,\n      tags: (project as any).project_tags || [],\n      materials: (project as any).project_materials || [],\n      views: (project.views || 0) + 1,\n      likes: (project._count as any)?.project_likes || 0,\n      rating: project.rating || 0\n    });\n\n  } catch (error) {\n    console.error('❌ خطأ في جلب المشروع:', error);\n    return NextResponse.json(\n      { error: 'حدث خطأ في جلب المشروع' },\n      { status: 500 }\n    );\n  }\n}\n\n// PUT - تعديل مشروع\nexport async function PUT(\n  request: NextRequest,\n  { params }: { params: Promise<{ id: string }> }\n) {\n  try {\n    const resolvedParams = await params;\n    const projectId = resolvedParams.id;\n    const data = await request.json();\n    console.log('🔧 تعديل المشروع:', projectId, data);\n\n    const {\n      title,\n      description,\n      category,\n      location,\n      completionDate,\n      client,\n      featured,\n      projectDuration,\n      projectCost,\n      mediaItems,\n      tags,\n      materials\n    } = data;\n\n    // التحقق من صحة البيانات\n    if (!title || !description || !category || !location) {\n      return NextResponse.json(\n        { error: 'البيانات الأساسية مطلوبة' },\n        { status: 400 }\n      );\n    }\n\n    // التحقق من وجود المشروع\n    const existingProject = await prisma.projects.findUnique({\n      where: { id: projectId },\n      include: {\n        mediaItems: true,\n        tags: true,\n        materials: true\n      }\n    });\n\n    if (!existingProject) {\n      return NextResponse.json(\n        { error: 'المشروع غير موجود' },\n        { status: 404 }\n      );\n    }\n\n    // حذف الوسائط والعلامات والمواد القديمة\n    await prisma.media_items.deleteMany({\n      where: { projectId }\n    });\n\n    await prisma.project_tags.deleteMany({\n      where: { projectId }\n    });\n\n    await prisma.project_materials.deleteMany({\n      where: { projectId }\n    });\n\n    // تحديث المشروع مع البيانات الجديدة\n    const updatedProject = await prisma.projects.update({\n      where: { id: projectId },\n      data: {\n        title,\n        description,\n        category,\n        location,\n        completionDate: new Date(completionDate),\n        client: client || null,\n        featured: featured || false,\n        projectDuration: projectDuration || '',\n        projectCost: projectCost || '',\n        updatedAt: new Date(),\n        media_items: {\n          create: mediaItems?.map((item: { type: string; src: string; thumbnail?: string; title?: string; description?: string; duration?: number }, index: number) => ({\n            type: item.type,\n            src: item.src,\n            thumbnail: item.thumbnail || item.src,\n            title: item.title || `ملف ${index + 1}`,\n            description: item.description || '',\n            duration: item.duration || null,\n            order: index\n          })) || []\n        },\n        project_tags: {\n          create: tags?.map((tag: string | { name: string }) => ({\n            name: typeof tag === 'string' ? tag : tag.name\n          })) || []\n        },\n        project_materials: {\n          create: materials?.map((material: string | { name: string }) => ({\n            name: typeof material === 'string' ? material : material.name\n          })) || []\n        }\n      },\n      include: {\n        media_items: true,\n        project_tags: true,\n        project_materials: true,\n        _count: {\n          select: {\n            comments: true,\n            project_likes: true,\n            project_views: true\n          }\n        }\n      }\n    });\n\n    console.log('✅ تم تحديث المشروع بنجاح:', updatedProject.title);\n\n    // إش��ار جوجل بالتحديث\n    try {\n      await fetch(`${process.env.NEXT_PUBLIC_BASE_URL || 'http://localhost:3000'}/api/sitemap/refresh`, {\n        method: 'POST'\n      });\n    } catch (error) {\n      console.warn('تعذر إشعار جوجل بالتحديث:', error);\n    }\n\n    return NextResponse.json({\n      success: true,\n      project: { ...updatedProject, mediaItems: (updatedProject as any).media_items },\n      message: 'تم تحديث المشروع بنجاح'\n    });\n\n  } catch (error: unknown) {\n    console.error('❌ خطأ في تحديث المشروع:', error);\n    return NextResponse.json(\n      { error: 'حدث خطأ في تحديث المشروع' },\n      { status: 500 }\n    );\n  }\n}\n\n// DELETE - حذف مشروع\nexport async function DELETE(\n  request: NextRequest,\n  { params }: { params: Promise<{ id: string }> }\n) {\n  try {\n    const resolvedParams = await params;\n    const projectId = resolvedParams.id;\n\n    // التحقق من وجود المشروع\n    const existingProject = await prisma.projects.findUnique({\n      where: { id: projectId },\n      include: {\n        media_items: true,\n        project_tags: true,\n        project_materials: true,\n        comments: true\n      }\n    });\n\n    if (!existingProject) {\n      return NextResponse.json(\n        { error: 'المشروع غي�� موجود' },\n        { status: 404 }\n      );\n    }\n\n    console.log('🗑️ حذف المشروع:', existingProject.title);\n\n    // حذف البيانات المرتبطة أولاً\n    await prisma.comments.deleteMany({\n      where: { projectId }\n    });\n\n    await prisma.media_items.deleteMany({\n      where: { projectId }\n    });\n\n    await prisma.project_tags.deleteMany({\n      where: { projectId }\n    });\n\n    await prisma.project_materials.deleteMany({\n      where: { projectId }\n    });\n\n    // حذف المشروع\n    await prisma.projects.delete({\n      where: { id: projectId }\n    });\n\n    console.log('✅ تم حذف المشروع بنجاح');\n\n    // إشعار جوجل بالحذف\n    try {\n      await fetch(`${process.env.NEXT_PUBLIC_BASE_URL || 'http://localhost:3000'}/api/sitemap/refresh`, {\n        method: 'POST'\n      });\n    } catch (error) {\n      console.warn('تعذر إشعار جوجل بالحذف:', error);\n    }\n\n    return NextResponse.json({\n      success: true,\n      message: 'تم حذف المشروع بنجاح'\n    });\n\n  } catch (error: unknown) {\n    console.error('❌ خطأ في حذف المشروع:', error);\n    return NextResponse.json(\n      { error: 'حدث خطأ في حذف الم��روع' },\n      { status: 500 }\n    );\n  }\n}\n"],"names":[],"mappings":"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","debugId":null}}]
}