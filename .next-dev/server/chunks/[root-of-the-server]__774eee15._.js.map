{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 6, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 68, "column": 0}, "map": {"version":3,"sources":["file:///app/code/src/lib/prisma.ts"],"sourcesContent":["import { PrismaClient } from '@prisma/client'\n\nimport { PrismaClient } from '@prisma/client'\n\nconst globalForPrisma = globalThis as unknown as {\n  prisma: PrismaClient | undefined\n}\n\nexport const prisma = globalForPrisma.prisma ?? new PrismaClient({\n  log: process.env.NODE_ENV === 'development' ? ['query', 'error', 'warn'] : ['error'],\n})\n\nif (process.env.NODE_ENV !== 'production') globalForPrisma.prisma = prisma\n"],"names":[],"mappings":";;;AAAA;;;AAIA,MAAM,kBAAkB;AAIjB,MAAM,SAAS,gBAAgB,MAAM,IAAI,IAAI,6HAAA,CAAA,eAAY,CAAC;IAC/D,KAAK,uCAAyC;QAAC;QAAS;QAAS;KAAO;AAC1E;AAEA,wCAA2C,gBAAgB,MAAM,GAAG","debugId":null}},
    {"offset": {"line": 121, "column": 0}, "map": {"version":3,"sources":["file:///app/code/src/app/api/auth/verify/route.ts"],"sourcesContent":["\nimport { type NextRequest, NextResponse } from 'next/server';\nimport { prisma } from '@/lib/prisma';\nimport jwt from 'jsonwebtoken';\n\nexport async function GET(request: NextRequest) {\n  try {\n    const token = request.cookies.get('admin-token')?.value;\n\n    if (!token) {\n      return NextResponse.json(\n        { error: 'غير مصرح لك بالدخول' },\n        { status: 401 }\n      );\n    }\n\n    // فك تشفير الـ token\n    const decoded = jwt.verify(\n      token, \n      process.env.JWT_SECRET || 'default-secret-key-change-in-production'\n    ) as any;\n\n    // البحث عن المدير\n    const admin = await prisma.admins.findUnique({\n      where: { id: decoded.adminId },\n      select: {\n        id: true,\n        username: true,\n        email: true,\n        fullName: true,\n        role: true,\n        status: true\n      }\n    });\n\n    if (!admin || admin.status !== 'ACTIVE') {\n      return NextResponse.json(\n        { error: 'الحساب غير نشط أو غير موجود' },\n        { status: 401 }\n      );\n    }\n\n    return NextResponse.json({\n      success: true,\n      admin\n    });\n\n  } catch (error) {\n    return NextResponse.json(\n      { error: 'جلسة غير صالحة' },\n      { status: 401 }\n    );\n  }\n}\n"],"names":[],"mappings":";;;AACA;AACA;AACA;;;;AAEO,eAAe,IAAI,OAAoB;IAC5C,IAAI;QACF,MAAM,QAAQ,QAAQ,OAAO,CAAC,GAAG,CAAC,gBAAgB;QAElD,IAAI,CAAC,OAAO;YACV,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CACtB;gBAAE,OAAO;YAAsB,GAC/B;gBAAE,QAAQ;YAAI;QAElB;QAEA,qBAAqB;QACrB,MAAM,UAAU,uIAAA,CAAA,UAAG,CAAC,MAAM,CACxB,OACA,QAAQ,GAAG,CAAC,UAAU,IAAI;QAG5B,kBAAkB;QAClB,MAAM,QAAQ,MAAM,sHAAA,CAAA,SAAM,CAAC,MAAM,CAAC,UAAU,CAAC;YAC3C,OAAO;gBAAE,IAAI,QAAQ,OAAO;YAAC;YAC7B,QAAQ;gBACN,IAAI;gBACJ,UAAU;gBACV,OAAO;gBACP,UAAU;gBACV,MAAM;gBACN,QAAQ;YACV;QACF;QAEA,IAAI,CAAC,SAAS,MAAM,MAAM,KAAK,UAAU;YACvC,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CACtB;gBAAE,OAAO;YAA8B,GACvC;gBAAE,QAAQ;YAAI;QAElB;QAEA,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;YACvB,SAAS;YACT;QACF;IAEF,EAAE,OAAO,OAAO;QACd,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CACtB;YAAE,OAAO;QAAiB,GAC1B;YAAE,QAAQ;QAAI;IAElB;AACF","debugId":null}}]
}