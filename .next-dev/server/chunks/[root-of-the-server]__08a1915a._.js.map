{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 6, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 68, "column": 0}, "map": {"version":3,"sources":["file:///app/code/src/lib/prisma.ts"],"sourcesContent":["import { PrismaClient } from '@prisma/client'\n\nconst globalForPrisma = globalThis as unknown as {\n  prisma: PrismaClient | undefined\n}\n\nexport const prisma = globalForPrisma.prisma ?? new PrismaClient({\n  log: process.env.NODE_ENV === 'development' ? ['query', 'error', 'warn'] : ['error'],\n})\n\nif (process.env.NODE_ENV !== 'production') globalForPrisma.prisma = prisma\n"],"names":[],"mappings":";;;AAAA;;AAEA,MAAM,kBAAkB;AAIjB,MAAM,SAAS,gBAAgB,MAAM,IAAI,IAAI,6HAAA,CAAA,eAAY,CAAC;IAC/D,KAAK,uCAAyC;QAAC;QAAS;QAAS;KAAO;AAC1E;AAEA,wCAA2C,gBAAgB,MAAM,GAAG","debugId":null}},
    {"offset": {"line": 88, "column": 0}, "map": {"version":3,"sources":["file:///app/code/src/app/api/projects/route.ts"],"sourcesContent":["import { type NextRequest, NextResponse } from 'next/server';\nimport { prisma } from '@/lib/prisma';\nimport { headers } from 'next/headers';\n\n// GET - جلب المشاريع مع إحصائيات التفاعل\nexport async function GET(request: NextRequest) {\n  try {\n    const searchParams = request.nextUrl.searchParams;\n    const category = searchParams.get('category');\n    const featured = searchParams.get('featured');\n    const limit = searchParams.get('limit');\n    const page = searchParams.get('page');\n    const sort = searchParams.get('sort') || 'newest';\n    const search = searchParams.get('search');\n    const status = searchParams.get('status') || 'PUBLISHED';\n\n    const skip = page ? (Number.parseInt(page) - 1) * (limit ? Number.parseInt(limit) : 12) : 0;\n    const take = limit ? Number.parseInt(limit) : 12;\n\n    const where: Record<string, unknown> = {\n      status: status\n    };\n\n    if (category && category !== 'all') {\n      where.category = {\n        contains: category\n      };\n    }\n\n    if (featured === 'true') {\n      where.featured = true;\n    }\n\n    if (search) {\n      const searchLower = search.toLowerCase();\n      where.OR = [\n        { title: { contains: search } },\n        { description: { contains: search } },\n        { location: { contains: search } },\n        {\n          tags: {\n            some: {\n              name: { contains: search }\n            }\n          }\n        }\n      ];\n    }\n\n    // تحديد ترتيب المشاريع\n    let orderBy: Array<Record<string, string>> = [];\n    switch (sort) {\n      case 'newest':\n        orderBy = [{ publishedAt: 'desc' }, { createdAt: 'desc' }];\n        break;\n      case 'oldest':\n        orderBy = [{ publishedAt: 'asc' }, { createdAt: 'asc' }];\n        break;\n      case 'featured':\n        orderBy = [{ featured: 'desc' }, { publishedAt: 'desc' }];\n        break;\n      case 'popular':\n        orderBy = [{ views: 'desc' }, { likes: 'desc' }];\n        break;\n      case 'most-liked':\n        orderBy = [{ likes: 'desc' }, { views: 'desc' }];\n        break;\n      case 'highest-rated':\n        orderBy = [{ rating: 'desc' }, { views: 'desc' }];\n        break;\n      case 'alphabetical':\n        orderBy = [{ title: 'asc' }];\n        break;\n      default:\n        orderBy = [{ featured: 'desc' }, { publishedAt: 'desc' }];\n    }\n\n    const projects = await prisma.project.findMany({\n      where,\n      include: {\n        mediaItems: {\n          orderBy: { order: 'asc' },\n          take: 5 // محدود للأداء\n        },\n        tags: {\n          take: 10\n        },\n        _count: {\n          select: {\n            comments: {\n              where: { status: 'APPROVED' }\n            },\n            likes_users: true,\n            views_users: true,\n            mediaItems: true\n          }\n        }\n      },\n      orderBy,\n      skip,\n      take\n    });\n\n    // تحسين البيانات المُرجعة\n    const formattedProjects = projects.map(project => ({\n      ...project,\n      views: project._count.views_users || 0,\n      likes: project._count.likes_users || 0,\n      commentsCount: project._count.comments || 0,\n      mediaCount: project._count.mediaItems || 0,\n      excerpt: project.description.substring(0, 150) + '...',\n      readTime: Math.ceil(project.description.length / 200), // تقدير وقت القراءة\n      slug: project.slug || generateSlug(project.title, project.id)\n    }));\n\n    const totalCount = await prisma.project.count({ where });\n\n    // إحصائيات إضافية\n    const stats = {\n      total: totalCount,\n      featured: await prisma.project.count({ where: { ...where, featured: true } }),\n      categories: await prisma.project.groupBy({\n        by: ['category'],\n        where,\n        _count: { category: true }\n      })\n    };\n\n    return NextResponse.json({\n      success: true,\n      projects: formattedProjects,\n      total: totalCount,\n      stats,\n      pagination: {\n        total: totalCount,\n        page: page ? Number.parseInt(page) : 1,\n        limit: take,\n        totalPages: Math.ceil(totalCount / take),\n        hasMore: skip + take < totalCount\n      }\n    });\n\n  } catch (error: unknown) {\n    console.error('❌ خطأ في جلب المشاريع:', error);\n    return NextResponse.json(\n      { error: 'حدث خطأ في جلب المشاريع' },\n      { status: 500 }\n    );\n  }\n}\n\n// POST - إضافة مشروع جديد\nexport async function POST(request: NextRequest) {\n  try {\n    const data = await request.json();\n    const headersList = await headers();\n    const ip = headersList.get('x-forwarded-for') || 'unknown';\n\n    const {\n      title,\n      description,\n      category,\n      location,\n      completionDate,\n      client,\n      featured,\n      projectDuration,\n      projectCost,\n      mediaItems,\n      tags,\n      materials,\n      metaTitle,\n      metaDescription,\n      keywords,\n      status = 'PUBLISHED'\n    } = data;\n\n    // التحقق من صحة البيانات\n    if (!title || !description || !category || !location) {\n      return NextResponse.json(\n        { error: 'البيانات الأساسية مطلوبة' },\n        { status: 400 }\n      );\n    }\n\n    // إنشاء slug فريد\n    const slug = generateSlug(title);\n    const existingSlug = await prisma.project.findUnique({\n      where: { slug }\n    });\n\n    const finalSlug = existingSlug ? `${slug}-${Date.now()}` : slug;\n\n    const project = await prisma.project.create({\n      data: {\n        title,\n        description,\n        category,\n        location,\n        completionDate: new Date(completionDate),\n        client: client || null,\n        featured: featured || false,\n        projectDuration: projectDuration || '',\n        projectCost: projectCost || '',\n        slug: finalSlug,\n        metaTitle: metaTitle || title,\n        metaDescription: metaDescription || description.substring(0, 160),\n        keywords: keywords || `${category}, ${location}, محترفين الديار`,\n        status,\n        publishedAt: status === 'PUBLISHED' ? new Date() : null,\n        mediaItems: {\n          create: mediaItems?.map((item: any, index: number) => ({\n            type: item.type,\n            src: item.src || item.url,\n            thumbnail: item.thumbnail || item.src || item.url,\n            title: item.title || `ملف ${index + 1}`,\n            description: item.description || '',\n            duration: item.duration || null,\n            fileSize: item.fileSize || null,\n            mimeType: item.mimeType || null,\n            alt: item.alt || title,\n            caption: item.caption || '',\n            order: index\n          })) || []\n        },\n\n      },\n      include: {\n        mediaItems: true,\n        _count: {\n          select: {\n            comments: true,\n            likes_users: true,\n            views_users: true\n          }\n        }\n      }\n    });\n\n    // إنشاء أول مشاهدة (من الإدارة)\n    await prisma.projectView.create({\n      data: {\n        projectId: project.id,\n        ip,\n        userAgent: headersList.get('user-agent') || 'unknown',\n        source: 'admin'\n      }\n    });\n\n    // تحديث عداد المشاهدات\n    await prisma.project.update({\n      where: { id: project.id },\n      data: { views: 1 }\n    });\n\n    // إشعار Google بالمحتوى الجديد\n    try {\n      await notifyGoogleNewContent(project.slug);\n    } catch (error) {\n      console.warn('فشل في إشعار Google:', error);\n    }\n\n    return NextResponse.json({\n      success: true,\n      project: {\n        ...project,\n        views: 1,\n        likes: 0,\n        commentsCount: 0\n      },\n      message: 'تم إضافة المشروع بنجاح'\n    });\n\n  } catch (error: unknown) {\n    console.error('❌ خطأ في إضافة المشروع:', error);\n    return NextResponse.json(\n      { \n        error: 'حدث خطأ في إضافة المشروع',\n        details: process.env.NODE_ENV === 'development' ? String(error) : undefined\n      },\n      { status: 500 }\n    );\n  }\n}\n\n// Helper functions\nfunction generateSlug(title: string, id?: string): string {\n  const slug = title\n    .replace(/[^\\u0600-\\u06FF\\w\\s-]/g, '') // إزالة الرموز ما عدا العربية والإنجليزية\n    .replace(/\\s+/g, '-') // استبدال المسافات بشرطات\n    .toLowerCase()\n    .trim();\n\n  return id ? `${slug}-${id}` : slug;\n}\n\nasync function notifyGoogleNewContent(slug: string): Promise<void> {\n  const baseUrl = process.env.NEXT_PUBLIC_BASE_URL || 'https://aldeyarksa.tech';\n  const url = `${baseUrl}/portfolio/${slug}`;\n\n  try {\n    // إشعار Google بالصفحة الجديدة\n    await fetch('https://www.google.com/ping?sitemap=' + encodeURIComponent(`${baseUrl}/sitemap.xml`));\n\n    // يمكن إضافة Google Search Console API هنا\n    console.log('✅ تم إشعار Google بالمحتوى الجديد:', url);\n  } catch (error) {\n    console.warn('⚠️ فشل في إشعار Google:', error);\n  }\n}"],"names":[],"mappings":"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","debugId":null}}]
}