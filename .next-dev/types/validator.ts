// This file is generated automatically by Next.js
// Do not edit this file manually
// This file validates that all pages and layouts export the correct types

import type { AppRoutes, LayoutRoutes, ParamMap, AppRouteHandlerRoutes } from "./routes.js"
import type { ResolvingMetadata, ResolvingViewport } from "next/dist/lib/metadata/types/metadata-interface.js"
import type { NextRequest } from 'next/server.js'

type AppPageConfig<Route extends AppRoutes = AppRoutes> = {
  default: React.ComponentType<{ params: Promise<ParamMap[Route]> } & any> | ((props: { params: Promise<ParamMap[Route]> } & any) => React.ReactNode | Promise<React.ReactNode> | never | void | Promise<void>)
  generateStaticParams?: (props: { params: ParamMap[Route] }) => Promise<any[]> | any[]
  generateMetadata?: (
    props: { params: Promise<ParamMap[Route]> } & any,
    parent: ResolvingMetadata
  ) => Promise<any> | any
  generateViewport?: (
    props: { params: Promise<ParamMap[Route]> } & any,
    parent: ResolvingViewport
  ) => Promise<any> | any
  metadata?: any
  viewport?: any
}

type PagesPageConfig = {
  default: React.ComponentType<any> | ((props: any) => React.ReactNode | Promise<React.ReactNode> | never | void)
  getStaticProps?: (context: any) => Promise<any> | any
  getStaticPaths?: (context: any) => Promise<any> | any
  getServerSideProps?: (context: any) => Promise<any> | any
  getInitialProps?: (context: any) => Promise<any> | any
  /**
   * Segment configuration for legacy Pages Router pages.
   * Validated at build-time by parsePagesSegmentConfig.
   */
  config?: {
    amp?: boolean | 'hybrid' | string // necessary for JS
    maxDuration?: number
    runtime?: 'edge' | 'experimental-edge' | 'nodejs' | string // necessary unless config is exported as const
    regions?: string[]
  }
}

type LayoutConfig<Route extends LayoutRoutes = LayoutRoutes> = {
  default: React.ComponentType<LayoutProps<Route>> | ((props: LayoutProps<Route>) => React.ReactNode | Promise<React.ReactNode> | never | void | Promise<void>)
  generateStaticParams?: (props: { params: ParamMap[Route] }) => Promise<any[]> | any[]
  generateMetadata?: (
    props: { params: Promise<ParamMap[Route]> } & any,
    parent: ResolvingMetadata
  ) => Promise<any> | any
  generateViewport?: (
    props: { params: Promise<ParamMap[Route]> } & any,
    parent: ResolvingViewport
  ) => Promise<any> | any
  metadata?: any
  viewport?: any
}

type RouteHandlerConfig<Route extends AppRouteHandlerRoutes = AppRouteHandlerRoutes> = {
  GET?: (request: NextRequest, context: { params: Promise<ParamMap[Route]> }) => Promise<Response> | Response | Promise<void> | void
  POST?: (request: NextRequest, context: { params: Promise<ParamMap[Route]> }) => Promise<Response> | Response | Promise<void> | void
  PUT?: (request: NextRequest, context: { params: Promise<ParamMap[Route]> }) => Promise<Response> | Response | Promise<void> | void
  PATCH?: (request: NextRequest, context: { params: Promise<ParamMap[Route]> }) => Promise<Response> | Response | Promise<void> | void
  DELETE?: (request: NextRequest, context: { params: Promise<ParamMap[Route]> }) => Promise<Response> | Response | Promise<void> | void
  HEAD?: (request: NextRequest, context: { params: Promise<ParamMap[Route]> }) => Promise<Response> | Response | Promise<void> | void
  OPTIONS?: (request: NextRequest, context: { params: Promise<ParamMap[Route]> }) => Promise<Response> | Response | Promise<void> | void
}


// Validate ../../src/app/about/page.tsx
{
  const handler = {} as typeof import("../../src/app/about/page.js")
  handler satisfies AppPageConfig<"/about">
}

// Validate ../../src/app/articles/[slug]/page.tsx
{
  const handler = {} as typeof import("../../src/app/articles/[slug]/page.js")
  handler satisfies AppPageConfig<"/articles/[slug]">
}

// Validate ../../src/app/articles/complete-car-shades-guide-jeddah-2024/page.tsx
{
  const handler = {} as typeof import("../../src/app/articles/complete-car-shades-guide-jeddah-2024/page.js")
  handler satisfies AppPageConfig<"/articles/complete-car-shades-guide-jeddah-2024">
}

// Validate ../../src/app/articles/page.tsx
{
  const handler = {} as typeof import("../../src/app/articles/page.js")
  handler satisfies AppPageConfig<"/articles">
}

// Validate ../../src/app/audit/page.tsx
{
  const handler = {} as typeof import("../../src/app/audit/page.js")
  handler satisfies AppPageConfig<"/audit">
}

// Validate ../../src/app/contact/page.tsx
{
  const handler = {} as typeof import("../../src/app/contact/page.js")
  handler satisfies AppPageConfig<"/contact">
}

// Validate ../../src/app/dashboard/page.tsx
{
  const handler = {} as typeof import("../../src/app/dashboard/page.js")
  handler satisfies AppPageConfig<"/dashboard">
}

// Validate ../../src/app/dashboard/projects/[id]/edit/page.tsx
{
  const handler = {} as typeof import("../../src/app/dashboard/projects/[id]/edit/page.js")
  handler satisfies AppPageConfig<"/dashboard/projects/[id]/edit">
}

// Validate ../../src/app/dashboard/projects/[id]/page.tsx
{
  const handler = {} as typeof import("../../src/app/dashboard/projects/[id]/page.js")
  handler satisfies AppPageConfig<"/dashboard/projects/[id]">
}

// Validate ../../src/app/dashboard/projects/add/page.tsx
{
  const handler = {} as typeof import("../../src/app/dashboard/projects/add/page.js")
  handler satisfies AppPageConfig<"/dashboard/projects/add">
}

// Validate ../../src/app/dashboard/projects/page.tsx
{
  const handler = {} as typeof import("../../src/app/dashboard/projects/page.js")
  handler satisfies AppPageConfig<"/dashboard/projects">
}

// Validate ../../src/app/dashboard/settings/page.tsx
{
  const handler = {} as typeof import("../../src/app/dashboard/settings/page.js")
  handler satisfies AppPageConfig<"/dashboard/settings">
}

// Validate ../../src/app/faq/page.tsx
{
  const handler = {} as typeof import("../../src/app/faq/page.js")
  handler satisfies AppPageConfig<"/faq">
}

// Validate ../../src/app/login/page.tsx
{
  const handler = {} as typeof import("../../src/app/login/page.js")
  handler satisfies AppPageConfig<"/login">
}

// Validate ../../src/app/manual-indexing/page.tsx
{
  const handler = {} as typeof import("../../src/app/manual-indexing/page.js")
  handler satisfies AppPageConfig<"/manual-indexing">
}

// Validate ../../src/app/portfolio/[id]/page.tsx
{
  const handler = {} as typeof import("../../src/app/portfolio/[id]/page.js")
  handler satisfies AppPageConfig<"/portfolio/[id]">
}

// Validate ../../src/app/portfolio/page.tsx
{
  const handler = {} as typeof import("../../src/app/portfolio/page.js")
  handler satisfies AppPageConfig<"/portfolio">
}

// Validate ../../src/app/portfolio/reviews/page.tsx
{
  const handler = {} as typeof import("../../src/app/portfolio/reviews/page.js")
  handler satisfies AppPageConfig<"/portfolio/reviews">
}

// Validate ../../src/app/privacy/page.tsx
{
  const handler = {} as typeof import("../../src/app/privacy/page.js")
  handler satisfies AppPageConfig<"/privacy">
}

// Validate ../../src/app/quote/page.tsx
{
  const handler = {} as typeof import("../../src/app/quote/page.js")
  handler satisfies AppPageConfig<"/quote">
}

// Validate ../../src/app/search/page.tsx
{
  const handler = {} as typeof import("../../src/app/search/page.js")
  handler satisfies AppPageConfig<"/search">
}

// Validate ../../src/app/seo-monitor/page.tsx
{
  const handler = {} as typeof import("../../src/app/seo-monitor/page.js")
  handler satisfies AppPageConfig<"/seo-monitor">
}

// Validate ../../src/app/services/byoot-shaar/page.tsx
{
  const handler = {} as typeof import("../../src/app/services/byoot-shaar/page.js")
  handler satisfies AppPageConfig<"/services/byoot-shaar">
}

// Validate ../../src/app/services/khayyam/page.tsx
{
  const handler = {} as typeof import("../../src/app/services/khayyam/page.js")
  handler satisfies AppPageConfig<"/services/khayyam">
}

// Validate ../../src/app/services/landscaping/page.tsx
{
  const handler = {} as typeof import("../../src/app/services/landscaping/page.js")
  handler satisfies AppPageConfig<"/services/landscaping">
}

// Validate ../../src/app/services/mazallat/page.tsx
{
  const handler = {} as typeof import("../../src/app/services/mazallat/page.js")
  handler satisfies AppPageConfig<"/services/mazallat">
}

// Validate ../../src/app/services/pergolas/page.tsx
{
  const handler = {} as typeof import("../../src/app/services/pergolas/page.js")
  handler satisfies AppPageConfig<"/services/pergolas">
}

// Validate ../../src/app/services/renovation/page.tsx
{
  const handler = {} as typeof import("../../src/app/services/renovation/page.js")
  handler satisfies AppPageConfig<"/services/renovation">
}

// Validate ../../src/app/services/sandwich-panel/page.tsx
{
  const handler = {} as typeof import("../../src/app/services/sandwich-panel/page.js")
  handler satisfies AppPageConfig<"/services/sandwich-panel">
}

// Validate ../../src/app/services/sawater/page.tsx
{
  const handler = {} as typeof import("../../src/app/services/sawater/page.js")
  handler satisfies AppPageConfig<"/services/sawater">
}

// Validate ../../src/app/terms/page.tsx
{
  const handler = {} as typeof import("../../src/app/terms/page.js")
  handler satisfies AppPageConfig<"/terms">
}

// Validate ../../src/app/api/auth/change-password/route.ts
{
  const handler = {} as typeof import("../../src/app/api/auth/change-password/route.js")
  handler satisfies RouteHandlerConfig<"/api/auth/change-password">
}

// Validate ../../src/app/api/auth/login/route.ts
{
  const handler = {} as typeof import("../../src/app/api/auth/login/route.js")
  handler satisfies RouteHandlerConfig<"/api/auth/login">
}

// Validate ../../src/app/api/auth/logout/route.ts
{
  const handler = {} as typeof import("../../src/app/api/auth/logout/route.js")
  handler satisfies RouteHandlerConfig<"/api/auth/logout">
}

// Validate ../../src/app/api/auth/verify/route.ts
{
  const handler = {} as typeof import("../../src/app/api/auth/verify/route.js")
  handler satisfies RouteHandlerConfig<"/api/auth/verify">
}

// Validate ../../src/app/api/dashboard/stats/route.ts
{
  const handler = {} as typeof import("../../src/app/api/dashboard/stats/route.js")
  handler satisfies RouteHandlerConfig<"/api/dashboard/stats">
}

// Validate ../../src/app/api/healthcheck/route.ts
{
  const handler = {} as typeof import("../../src/app/api/healthcheck/route.js")
  handler satisfies RouteHandlerConfig<"/api/healthcheck">
}

// Validate ../../src/app/api/indexnow/route.ts
{
  const handler = {} as typeof import("../../src/app/api/indexnow/route.js")
  handler satisfies RouteHandlerConfig<"/api/indexnow">
}

// Validate ../../src/app/api/manual-indexing/test/route.ts
{
  const handler = {} as typeof import("../../src/app/api/manual-indexing/test/route.js")
  handler satisfies RouteHandlerConfig<"/api/manual-indexing/test">
}

// Validate ../../src/app/api/projects/[id]/comments/route.ts
{
  const handler = {} as typeof import("../../src/app/api/projects/[id]/comments/route.js")
  handler satisfies RouteHandlerConfig<"/api/projects/[id]/comments">
}

// Validate ../../src/app/api/projects/[id]/interactions/route.ts
{
  const handler = {} as typeof import("../../src/app/api/projects/[id]/interactions/route.js")
  handler satisfies RouteHandlerConfig<"/api/projects/[id]/interactions">
}

// Validate ../../src/app/api/projects/[id]/route.ts
{
  const handler = {} as typeof import("../../src/app/api/projects/[id]/route.js")
  handler satisfies RouteHandlerConfig<"/api/projects/[id]">
}

// Validate ../../src/app/api/projects/create/route.ts
{
  const handler = {} as typeof import("../../src/app/api/projects/create/route.js")
  handler satisfies RouteHandlerConfig<"/api/projects/create">
}

// Validate ../../src/app/api/projects/route.ts
{
  const handler = {} as typeof import("../../src/app/api/projects/route.js")
  handler satisfies RouteHandlerConfig<"/api/projects">
}

// Validate ../../src/app/api/reviews/route.ts
{
  const handler = {} as typeof import("../../src/app/api/reviews/route.js")
  handler satisfies RouteHandlerConfig<"/api/reviews">
}

// Validate ../../src/app/api/search/route.ts
{
  const handler = {} as typeof import("../../src/app/api/search/route.js")
  handler satisfies RouteHandlerConfig<"/api/search">
}

// Validate ../../src/app/api/seo/indexing-status/route.ts
{
  const handler = {} as typeof import("../../src/app/api/seo/indexing-status/route.js")
  handler satisfies RouteHandlerConfig<"/api/seo/indexing-status">
}

// Validate ../../src/app/api/site-audit/route.ts
{
  const handler = {} as typeof import("../../src/app/api/site-audit/route.js")
  handler satisfies RouteHandlerConfig<"/api/site-audit">
}

// Validate ../../src/app/api/sitemap/auto-refresh/route.ts
{
  const handler = {} as typeof import("../../src/app/api/sitemap/auto-refresh/route.js")
  handler satisfies RouteHandlerConfig<"/api/sitemap/auto-refresh">
}

// Validate ../../src/app/api/sitemap/refresh/route.ts
{
  const handler = {} as typeof import("../../src/app/api/sitemap/refresh/route.js")
  handler satisfies RouteHandlerConfig<"/api/sitemap/refresh">
}

// Validate ../../src/app/api/upload/route.ts
{
  const handler = {} as typeof import("../../src/app/api/upload/route.js")
  handler satisfies RouteHandlerConfig<"/api/upload">
}

// Validate ../../src/app/api/webhook/content-updated/route.ts
{
  const handler = {} as typeof import("../../src/app/api/webhook/content-updated/route.js")
  handler satisfies RouteHandlerConfig<"/api/webhook/content-updated">
}

// Validate ../../src/app/robots.txt/route.ts
{
  const handler = {} as typeof import("../../src/app/robots.txt/route.js")
  handler satisfies RouteHandlerConfig<"/robots.txt">
}

// Validate ../../src/app/sitemap-articles.xml/route.ts
{
  const handler = {} as typeof import("../../src/app/sitemap-articles.xml/route.js")
  handler satisfies RouteHandlerConfig<"/sitemap-articles.xml">
}

// Validate ../../src/app/sitemap-images.xml/route.ts
{
  const handler = {} as typeof import("../../src/app/sitemap-images.xml/route.js")
  handler satisfies RouteHandlerConfig<"/sitemap-images.xml">
}

// Validate ../../src/app/sitemap-index.xml/route.ts
{
  const handler = {} as typeof import("../../src/app/sitemap-index.xml/route.js")
  handler satisfies RouteHandlerConfig<"/sitemap-index.xml">
}

// Validate ../../src/app/sitemap-projects.xml/route.ts
{
  const handler = {} as typeof import("../../src/app/sitemap-projects.xml/route.js")
  handler satisfies RouteHandlerConfig<"/sitemap-projects.xml">
}

// Validate ../../src/app/sitemap.xml/route.ts
{
  const handler = {} as typeof import("../../src/app/sitemap.xml/route.js")
  handler satisfies RouteHandlerConfig<"/sitemap.xml">
}

// Validate ../../src/pages/_app.tsx
{
  const handler = {} as typeof import("../../src/pages/_app.js")
  handler satisfies PagesPageConfig
}

// Validate ../../src/pages/home.tsx
{
  const handler = {} as typeof import("../../src/pages/home.js")
  handler satisfies PagesPageConfig
}

// Validate ../../src/pages/index.tsx
{
  const handler = {} as typeof import("../../src/pages/index.js")
  handler satisfies PagesPageConfig
}



// Validate ../../src/app/dashboard/layout.tsx
{
  const handler = {} as typeof import("../../src/app/dashboard/layout.js")
  handler satisfies LayoutConfig<"/dashboard">
}

// Validate ../../src/app/layout.tsx
{
  const handler = {} as typeof import("../../src/app/layout.js")
  handler satisfies LayoutConfig<"/">
}
